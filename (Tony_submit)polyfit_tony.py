{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[  52.15805383 -189.86610582]\n",
      "[   7.0015834     9.30386367 -239.33403275]\n",
      "[ 8.20136784e-01  2.61767967e-01 -1.02236698e-02 -1.75277268e+02]\n",
      "[ 5.98796973e-03  7.55218025e-01  2.34559350e-01  1.17636510e+00\n",
      " -1.75880285e+02]\n",
      "[ 8.53115544e-04 -4.69798188e-03  7.52811346e-01  5.26083335e-01\n",
      "  9.65918011e-01 -1.76837363e+02]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "from scipy.optimize import leastsq\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "datapath = 'poly.txt'\n",
    "\n",
    "data = np.loadtxt(datapath)\n",
    "\n",
    "data = data[data[:,0].argsort()]\n",
    "x = data[:,0]\n",
    "y = data[:,1]\n",
    "# print(x)\n",
    "\n",
    "def fit_func(p, x):\n",
    "    f = np.poly1d(p)\n",
    "    return f(x)\n",
    "\n",
    "def err_func(p,x,y):\n",
    "    ret = fit_func(p,x) - y\n",
    "    return ret\n",
    "\n",
    "def n_poly(n):\n",
    "    p_init = np.random.randn(n)\n",
    "    parameters = leastsq(err_func,p_init,args=(x,y))\n",
    "    return parameters[0]\n",
    "\n",
    "# x ~ d+1\n",
    "for d in range(2,7):\n",
    "    k = n_poly(d)\n",
    "    print(k)\n",
    "    \n",
    "\n",
    "# Plotting Original Data\n",
    "plt.scatter(x, y, color='black', label='data')\n",
    "\n",
    "# Plotting Polynomial d = 1\n",
    "coeffList_d_1 = [52.1581,-189.866] ######## Need to Replace with paramFits ########\n",
    "y = coeffList_d_1[0]*(x) + coeffList_d_1[1]\n",
    "plt.plot(x,y, color='red', label='d = 1')\n",
    "\n",
    "# Plotting Polynomial d = 2\n",
    "coeffList_d_2 = [7.00158,9.30386,-239.334]  ######## Need to Replace with paramFits ########\n",
    "y = coeffList_d_2[0]*(x**2) + coeffList_d_2[1]*x + coeffList_d_2[2]\n",
    "plt.plot(x,y, color='orange', label='d = 2')\n",
    "\n",
    "# Plotting Polynomial d = 3\n",
    "coeffList_d_3 = [0.820138,0.271767,-0.0103221,-175.277]  ######## Need to Replace with paramFits ########\n",
    "y = coeffList_d_3[0]*(x**3) + coeffList_d_3[1]*(x**2) + coeffList_d_3[2]*x + coeffList_d_3[3]\n",
    "plt.plot(x,y, color='blue', label='d = 3')\n",
    "\n",
    "# Plotting Polynomial d = 4\n",
    "coeffList_d_4 = [0.00598796,0.755218,0.23456,1.17636,-175.88]  ######## Need to Replace with paramFits ########\n",
    "y = coeffList_d_4[0]*(x**4) + coeffList_d_4[1]*(x**3) + coeffList_d_4[2]*(x**2) + coeffList_d_4[3]*x + coeffList_d_4[4]\n",
    "plt.plot(x,y, color='green', label='d = 4')\n",
    "\n",
    "# Plotting Polynomial d = 5\n",
    "coeffList_d_5 = [0.000853138,-0.0046982,0.752812,0.526091,0.965906,-176.837]  ######## Need to Replace with paramFits ########\n",
    "y = coeffList_d_5[0]*(x**5) + coeffList_d_5[1]*(x**4) + coeffList_d_5[2]*(x**3) + coeffList_d_5[3]*(x**2) + coeffList_d_5[4]*x + coeffList_d_5[5]\n",
    "plt.plot(x,y, color='purple', label='d = 5')\n",
    "\n",
    "# Labeling Data\n",
    "plt.title('Purdue homework 1_Tony Qin_20200727')\n",
    "plt.xlabel('x', fontsize=16)\n",
    "plt.ylabel('y', fontsize=16)\n",
    "plt.legend(fontsize=10, loc='upper left')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
